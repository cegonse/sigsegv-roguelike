const packer = require('../src/packer')

// Pack header
// 53 49 47 53 45 47 56   Magic (SIGSEGV)
// 12 34                  BOM (must be 1234 in little endian)
// XX XX XX XX            Pack size in bytes (little endian 32 bit unsigned int)
// XX XX XX XX            Num resources (little endian 32 bit unsigned int)
//
// For each texture resource
// XX XX XX XX            Texture ID length (little endian 32 bit unsigned int)
// [XX]                   Texture ID in ASCII (not NULL terminated)
// XX XX XX XX            Texture path length (little endian 32 bit unsigned int)
// [XX]                   Texture path in ASCII (not NULL terminated)

describe('Resource packer', () => {
  it('packs a resource pack with zero textures', () => {
    const result = packer.buildResourcePack([])

    expect([...result.buffer]).toEqual([
      0x53, 0x49, 0x47, 0x53, 0x45, 0x47, 0x56,
      0x78, 0x56, 0x34, 0x12,
      0x13, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00
    ])
    expect(result.numResources).toEqual(0)
  })

  it('packs a resource pack with many textures', () => {
    const result = packer.buildResourcePack([
      'dir/first.png', 'other/second.png'
    ])

    expect([...result.buffer]).toEqual([
      0x53, 0x49, 0x47, 0x53, 0x45, 0x47, 0x56,
      0x78, 0x56, 0x34, 0x12,
      0x4B, 0x00, 0x00, 0x00,
      0x02, 0x00, 0x00, 0x00,
      0x05, 0x00, 0x00, 0x00,
      0x66, 0x69, 0x72, 0x73, 0x74,
      0x0D, 0x00, 0x00, 0x00,
      0x64, 0x69, 0x72, 0x2F, 0x66, 0x69, 0x72, 0x73, 0x74, 0x2E, 0x70, 0x6E, 0x67,
      0x06, 0x00, 0x00, 0x00,
      0x73, 0x65, 0x63, 0x6F, 0x6E, 0x64,
      0x10, 0x00, 0x00, 0x00,
      0x6F, 0x74, 0x68, 0x65, 0x72, 0x2F, 0x73, 0x65, 0x63, 0x6F, 0x6E, 0x64, 0x2E, 0x70, 0x6E, 0x67
    ])
    expect(result.textures.length).toEqual(2)
    expect(result.numResources).toEqual(2)
  })
})
